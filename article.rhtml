<html>
  
<p> What do people do for their moms on Mother's Day? With some responses from a small survey, I got a rough idea of what activities are popular. </p>

<p> Respondents were asked what gifts and activities they gave and did during Mother's Day, both as a child and as an adult. For those whose mothers are no longer living, the activities they did in the past are used. </p>

<p> The sample size is kind of low, and the demographics aren't completely unbiased, so this is a less serious post than usual.</p>

<h2> Activities and Gifts for Mother's Day as Child and as Adult </h2>
<!--begin.rcode setup, echo=FALSE, message=FALSE, warning=FALSE
library(dplyr)
library(reshape2)
library(ggplot2)
library(scales)
library(cetcolor)

csv_files = dir('.')[grepl('.*csv$', dir('.'))]

data_list = lapply(csv_files, read.csv, stringsAsFactors=FALSE)

survey = bind_rows(data_list)

names(survey) = c(
  'timestamp',
  'food',
  'relationship_level',
  'alive',
  'biological',
  'three_words',
  'gender',
  'age_group',
  'mothers_day_child',
  'mothers_day_adult',
  'grlc'
)


expand_column <- function(df, column){
  table(stack(setNames(strsplit(as.character(df[,column]), ";\\s*"), seq_len(nrow(df))))[2:1])
}

build_cooccurrence_matrix <-function(x, min_colsum=3){
  #x = x[,-1]
  x = x[,colSums(x) >=min_colsum]
  vnames = colnames(x)
  com = matrix(nrow=ncol(x), ncol=ncol(x), 0)
  for (i in 1:ncol(x)){
    for (j in i:ncol(x)){
      v = sum(x[,i]*x[,j])
      com[i, j] = v
      com[j, i] = v
    }
  }
  rownames(com) = vnames
  colnames(com) = vnames
  return(com)
}
end.rcode-->

<!--begin.rcode activities, fig.width=10, fig.height=8, echo=FALSE, message=FALSE, warning=FALSE
# plot stuff done for mother
expand_column <- function(df, column){
  table(stack(setNames(strsplit(as.character(df[,column]), ";\\s*"), seq_len(nrow(df))))[2:1])
}

build_cooccurrence_matrix <-function(x, min_colsum=3){
  #x = x[,-1]
  x = x[,colSums(x) >=min_colsum]
  vnames = colnames(x)
  com = matrix(nrow=ncol(x), ncol=ncol(x), 0)
  for (i in 1:ncol(x)){
    for (j in i:ncol(x)){
      v = sum(x[,i]*x[,j])
      com[i, j] = v
      com[j, i] = v
    }
  }
  rownames(com) = vnames
  colnames(com) = vnames
  return(com)
}

age_gender_pops = list(
  'Male'=list(
    'Under 18'=27,
    '18-24'= 13,
    '25-34'=20,
    '35-44'=22,
    '45-54'=18,
    '55-64'=11.5
  ),
  'Female'=list(
    'Under 18'=26,
    '18-24'=13,
    '25-34'=20,
    '35-44'=22,
    '45-54'=19,
    '55-64'=12.5
  )
)

groups = matrix(nrow=2, ncol=6)
groups[1,] = unlist(age_gender_pops[['Female']])
groups[2,] = unlist(age_gender_pops[['Male']])
group_proportions = groups/sum(groups)
survey_group_sizes = survey %>%
  group_by(gender, age_group) %>%
  summarize(count=n()) %>%
  ungroup () %>% 
  mutate(group_proportion=count/sum(count)) 
  
calculate_weights <- function(prop1, age_groups, genders){
  weights = numeric(length(prop1))
  for (i in 1:length(prop1)){
    row = (genders[i]=='Male')*1 + 1
    column = which(age_groups[i]==c('Under 18','18-24','25-34','35-44','45-54','55-64'))
    weights[i] = groups[row, column]/(prop1[i] + 0.01)
  }
  return(weights)
}

survey_group_sizes$weights = calculate_weights(survey_group_sizes$group_proportion, 
                                               survey_group_sizes$age_group, 
                                               survey_group_sizes$gender
)

# calculate weights overall
survey_weighted = survey %>% left_join(survey_group_sizes, by=c('gender','age_group'))
total_adult_weights = survey_weighted %>% filter(age_group != 'Under 18') %>% 
  summarize(a=sum(weights)) %>% as.numeric()

total_child_weights = sum(survey_weighted$weights)

adult_weights = survey_weighted[survey_weighted$age_group != 'Under 18','weights']
child_weights = survey_weighted$weights

# plot stuff done for mother
n_adults = nrow(survey %>% filter(age_group != 'Under 18')) 
adult_expanded = expand_column(survey %>% filter(age_group != 'Under 18'), 
                               'mothers_day_adult') %>% 
  as.data.frame.matrix() 
child_expanded = expand_column(survey, 'mothers_day_child') %>% 
  as.data.frame.matrix()

molten_vars = colnames(adult_expanded)
child_molten_vars = colnames(child_expanded)

adult_expanded$weight = adult_weights
child_expanded$weight = child_weights

adult_stuff = adult_expanded %>% melt(measure.vars=molten_vars) %>%
  group_by(variable) %>% 
  summarize(proportion=mean(value),
            weighted_proportion=sum(weight*value)/total_adult_weights) %>%
  ungroup() %>%
  filter(proportion > 0.03) %>%
  filter(!grepl('I am still under.*', variable)) %>%
  mutate(age='adult', label=paste(percent(proportion), sprintf('(%d)', n_adults)),
         weighted_label=percent(weighted_proportion))

child_stuff = child_expanded %>% melt(measure.vars=child_molten_vars) %>%
  group_by(variable) %>% 
  summarize(proportion=mean(value), 
            weighted_proportion=sum(weight * value)/total_child_weights) %>%
  ungroup() %>%
  filter(proportion > 0.03) %>%
  filter(!grepl('I am still under.*', variable)) %>%
  mutate(age='child', label=paste(percent(proportion), sprintf('(%d)', nrow(survey))),
         weighted_label=percent(weighted_proportion))


stuff = rbind(adult_stuff, child_stuff)
combined_stuff = stuff %>% group_by(variable) %>%
  summarize(total=sum(proportion) * sum(1-(variable=='Nothing special')),
            weighted_total=sum(weighted_proportion) * sum(1-(variable=='Nothing special'))) %>%
  ungroup()

# order the levels
level_orders = as.character(combined_stuff$variable)[order(combined_stuff$total)]
weighted_level_orders = as.character(combined_stuff$variable)[order(
  combined_stuff$weighted_total
)]

stuff$variable = factor(as.character(stuff$variable), levels=weighted_level_orders)

ggplot(stuff) + 
  geom_bar(aes(x=variable, y=weighted_proportion, fill=age), stat='identity', position='dodge') + 
  ylab('proportion') + xlab('Mothers Day Activity') + 
  coord_flip() + 
  geom_text(aes(x=variable, y=weighted_proportion, group=age, label=weighted_label), 
            position=position_dodge(width=1), hjust='inward') + 
  ggtitle('Prevalence of Mothers Day Activities and Gifts', 
          subtitle='among 56 sampled participants, weighting by gender and age group') + 
  scale_fill_manual('Age Celebrating', values=c('adult'='#DD4433', 'child'='#FFAAAA')) +
  scale_y_continuous(label=percent) +
  theme_bw() + 
  theme(axis.text=element_text(size=rel(1.3)),
        legend.title = element_text(size=rel(1.5)),
        legend.text = element_text(size=rel(1.3)))

end.rcode-->
<h3> Unweighted Responses </h3>

<p> The above graph used weights so that the influence each demographic had on the percentages was roughly equal to the corresponding demographic size of the US population. Below is the graph of the unweighted results. The main difference is that flowers are a bit overrepresented in the unweighted sample.</p>

<!--begin.rcode unweighted, fig.width=10, fig.height=8, echo=FALSE, message=FALSE, warning=FALSE

stuff$variable = factor(as.character(stuff$variable), levels=level_orders)

ggplot(stuff) + 
  geom_bar(aes(x=variable, y=proportion, fill=age), stat='identity', position='dodge') + 
  ylab('proportion') + xlab('Mothers Day Activity') + 
  coord_flip() + 
  geom_text(aes(x=variable, y=proportion, group=age, label=label), 
            position=position_dodge(width=1), hjust='inward') + 
  ggtitle('Prevalence of Mothers Day Activities and Gifts', 
          subtitle='among 56 sampled participants') + 
  scale_fill_manual('Age Celebrating', values=c('adult'='#DD4433', 'child'='#FFAAAA')) +
  scale_y_continuous(label=percent) +
  theme_bw() + 
  theme(axis.text=element_text(size=rel(1.3)),
        legend.title = element_text(size=rel(1.5)),
        legend.text = element_text(size=rel(1.3)))

end.rcode-->

<h2> Demographics </h2>

<p> I used Facebook and Reddit for responses, and the age groups are a bit biased, especially for the 55-64 female group (from Facebook advertising). I would normally dive deeper into the results, but the sample size is fairly small for this much variation, so I will just leave this here for reference and keep this post simple. </p>

<!--begin.rcode demographics, fig.width=8, fig.height=8, echo=FALSE, message=FALSE, warning=FALSE
# plot demographics
demographics = survey %>% group_by(age_group, gender) %>%
  summarize(total = n()) %>%
  ungroup() %>%
  mutate(proportion=total/sum(total),
         label=sprintf('%s (%d)', percent(proportion), total),
         age_group=factor(as.character(age_group), 
                          levels=c('Under 18','18-24','25-34','35-44','45-54','55-64')
         )
  )

ggplot(demographics) + 
  geom_bar(aes(x=age_group, y=proportion, fill=gender), 
           stat='identity', position='dodge') + 
  geom_text(aes(x=age_group, y=proportion, group=gender, label=label), 
            position=position_dodge(width=1),hjust='inward') +
  coord_flip() + 
  xlab('Age Group') + 
  scale_y_continuous(label=percent) + 
  ggtitle('Demographics of Responses') +
  scale_fill_manual('Gender', values=c('Female'='#FFAAAA','Male'='#EE77EE'))  +
  theme_bw() + 
  theme(axis.text=element_text(size=rel(1.3)),
        legend.title = element_text(size=rel(1.5)),
        legend.text = element_text(size=rel(1.3)))
end.rcode-->

<h2> Thanks </h2>

<p> Thank you to all mothers who love their children, and have a happy Mother's Day. </p>

  </html>